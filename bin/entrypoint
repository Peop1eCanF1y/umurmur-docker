#!/bin/sh

CFG_DIR="/etc/umurmur/"

# Copy all templates to /etc/umurmur/, evaluate them and delete the template files
processJ2Templates() {
	printf "\nProcessing configuration from templates..."
	cp -R /templates/* "$CFG_DIR"
	for f in $(find "$CFG_DIR" -type f -name "*.j2"); do
	  printf "\n  %s\n  >> %s" "$f" "${f%.j2}"
	  j2 "$f" > "${f%.j2}"
	  rm -f "$f"
	done
}

# Run each shell script in /docker-entrypoint-init.d/
runInitScripts() {
	printf "\nRunning scripts in /docker-entrypoint-init.d/ ..."
	for f in "/docker-entrypoint-init.d"; do
	  case "$f" in
	      *.sh)  printf "\n  Running %s" 	"$f"	; . "$f" 	;;
	      *)     printf "\n  Ignoring %s" 	"$f" 						;;
	  esac
	done	
}

# Ensure permissions and ids are correct
updateIDs() {
	printf "\nUpdating IDs..."
	# Reset User UID if needed
	if [ "$(id -u "${APP_USER}")" -ne "${APP_UID}" ] && ! usermod -u "${APP_UID}" "${APP_USER}"; then
		printf "\nCannot change %s UID to %s" "${APP_USER}" "${APP_UID}"
		exit 1
	fi
	# Reset Group GUID if needed
	if [ "$(id -g "${APP_USER}")" -ne "${APP_GUID}" ] && ! groupmod -g "${APP_GUID}" "${APP_GROUP}"; then
		printf "\nCannot change %s GUID to %s" "${APP_GROUP}" "${APP_GUID}"
		exit 2
	fi
	# Reset permissions on CFG_DIR files
	find "$CFG_DIR" -maxdepth 1 -exec chown "${APP_USER}":"${APP_GROUP}" {} \;
	return 0
}

# ## INIT -------------------------------
# processJ2Templates
# runInitScripts
# updateIDs

## EXECUTION --------------------------
# cd "$CFG_DIR"
# su -c "$START_CMD" "${APP_USER}"

if processJ2Templates && runInitScripts && updateIDs; then
	printf "\nInit done!\n\n"
	if [ "$(id -u)" = '0' ]; then
		if [ "$1" = '/usr/local/bin/umurmurd' ]; then
			launch "$@"
		else
			exec "$@"
		fi
	fi
fi
